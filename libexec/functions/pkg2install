#!/usr/bin/env bash

#AUTOR: LAWRENCE COROY
# DESCRIPCIÓN: Script para automatizar la instalación de herramientas y configuraciones en Termux.

source ${HOME}/.UMBRELLA/UMBRELLA/functions || { echo -en "\033[31mError:\033[33mFile 'functions' is required but not exist!.\033[0m\n" ; exit 1; }

backup_files() {
  local files=("$@")
  for file in "${files[@]}"; do
    if [[ -e "$file" ]]; then
      local backup_file="${file}.backup.$(date +%d-%m-%Y_%H:%M:%S)"
      mv "$file" "$backup_file"
    fi
  done
}


usage() {
      printf "${yellow}USE: ${green}pkg2install ${red}<packages> ${yellow}to install a package providing UMBRELLA.
For more help type ${green}UMBRELLA ${yellow}[ ${red}-h ${yellow}| ${red}--help ${yellow}] for helpper UMBRELLA CORPORATION.

            PACKAGES:
            ${red}Distro${yellow}          ┄┄┄┄┄┅┅┅┅┅┅┆ Utility that allows you to run a Linux distribution on an Android device without requiring root access.
            ${red}-n ${yellow}| ${red}Neovim${yellow}     ┄┄┄┄┄┅┅┅┅┅┅┆ Neovim is a highly customizable and extensible text editor, which is a fork of the Vim project.${default}
            ${red}-z ${yellow}| ${red}Oh-my-zsh${yellow}  ┄┄┄┄┄┅┅┅┅┅┅┆ The Zsh is a Unix shell that can be used as an interactive login shell and as a command interpreter for shell scripting.
            ${red}-t ${yellow}| ${red}Oh-my-Tmux${yellow} ┄┄┄┄┄┅┅┅┅┅┅┆ Tmux is a terminal multiplexer: it allows creating, accessing and controlling multiple terminals from a single screen.
            ${red}P10K${yellow}            ┄┄┄┄┄┅┅┅┅┅┅┆ It is a plugin that allows you to customize the appearance of Zsh.
            ${red}-p ${yellow}| ${red}Packages${yellow}   ┄┄┄┄┄┅┅┅┅┅┅┆ Set of open source tools adapted to the Android OS packaged in a .deb extension for exclusive use in Termux.
            ${red}-v ${yellow}| ${red}Vim${yellow}        ┄┄┄┄┄┅┅┅┅┅┅┆ Vim is an open source, free, cross-platform text editor.
            ${red}X11_distro${yellow}      ┄┄┄┄┄┅┅┅┅┅┅┆ Utility that lets you run your Linux distribution in a desktop environment.
            ${red}X11_native${yellow}      ┄┄┄┄┄┅┅┅┅┅┅┆ It is a tool that allows you to run a Linux environment on an Android device.
      \n"
}

install_packages() {
  local dependencies=("wget" "gnupg" "curl" "git")

  log "$A ${blue}Installing packages dependencies... "
  install_dependencies "$dependencies"
  mkdir -p $PREFIX/etc/apt/sources.list.d
  wget https://raw.githubusercontent.com/ivam3/termux-packages/gh-pages/ivam3-termux-packages.list -O $PREFIX/etc/apt/sources.list.d/ivam3-termux-packages.list;
  curl -fsSL "https://raw.githubusercontent.com/ivam3/termux-packages/gh-pages/dists/stable/public_key.gpg"|gpg --dearmor|tee "$PREFIX/etc/apt/trusted.gpg.d/ivam3.gpg" 2>/dev/null;
  update_system
  log -d "Installed Packages Successfully!."
}

UMBRELLA() {
  local dependencies=("tree" "tealdeer" "lsd" "zsh" "git" "curl" "gnupg" "nodejs" "openjdk-17" "unzip" "openssl" "termux-api" "aapt" "bat" "column" "man" "file" "duf" "cacademo" "scrub" "shred")
  local backup=("${HOME}/.termux" "${HOME}/.config/lsd")
  local files=("${share}/.termux" "${share}/Hack.zip" "${share}/.dircolors")
  check_files "${files[@]}"

  log "$A ${blue}Installing UMBRELLA CORPORATION..."
  install_dependencies "$dependencies"
  backup_files "${backup[@]}"
  tldr --update;
  git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf && ~/.fzf/install

  log "$A ${blue}Setting UMBRELLA following instructions ... "
  mv -r ${share}/.termux/ ~;
  if [ ! -d ${PREFIX}/share/fonts ]; then
    mkdir -p ${PREFIX}/share/fonts;
  fi

  if ! unzip "${share}/Hack.zip" -d "${PREFIX}/share/fonts" 2>&1; then
    error -l "In the extraction of the Hack.zip file"
  else
    mv "${share}/.dircolors" ~
    rm "${PREFIX}/share/fonts/Hack.zip"
    cp "${PREFIX}/share/fonts/HackNerdFont-Italic.ttf" ~/.termux/font.ttf
  fi

  if [ ! -f "${HOME}/.bashrc" ]; then
    touch "${HOME}/.bashrc"
  fi

  chmod +x ~/.bashrc
  echo "echo -en \"\e[31mWARNING:\e[0m You are out of UMBRELLA CORPORATION | Some commands and tools could not be running.\n\"" >| ~/.bashrc;
  log -d "UMBRELLA CORPORATION Installed Successfully!"
}

Oh-My-Zsh() {
  local dependencies=("zsh" "git")
  local backup=("${HOME}/.zshrc" "${PREFIX}/etc/zshrc" "$PREFIX/etc/motd")
  local files=("${Zsh}/.zshrc" "${Zsh}/zshrc" "${Zhs}/themes")
  check_files "${files[@]}"

  log "$A ${blue}Installing dependencies Oh-My-Zsh ... "
  install_dependencies "${dependencies[@]}"
  backup_files "${backup[@]}"
  git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions 2>&1;
  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting 2>&1

  log "$A ${blue}Setting oh-my-zsh following UMBRELLA instructions ... "
  if ! pip install Pygments 2>&1; then
    error -l "It could not be installed Pygments"
  fi
  mv ${Zsh}/.zshrc ~;
  mv ${Zsh}/zshrc $PREFIX/etc;
  cp ${Zhs}/themes/* ~/.oh-my-zsh/themes && rm -rf "$Zsh"
  log -d "Oh-My-Zsh Installed Successfully"
}

Python() {
  local dependencies=("python3" "python-pip")

  log "$A ${blue}Installing dependencies Python ..."
  install_dependencies "${dependencies[@]}"

  if ! python -m pip --no-color --quiet --no-cache-dir install bpython >>"$LOG_FILE"; then
    error -l "It could not be installed bpython"
  else
    log -d "bpython Installed Successfully!."
  fi

  if ! python -m pip --no-color --quiet --no-cache-dir install jedin >>"$LOG_FILE"; then
    error -l "It could not be installed jedin"
  else
    log -d "jedin Installed Successfully!."
  fi
}

P10K() {
  local dependencies=("git" "p10k")

  log "$A ${blue}Installing dependencies Powerlevel10k ..."
  install_dependencies "${dependencies[@]}"
  git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k
  echo 'source ~/powerlevel10k/powerlevel10k.zsh-theme' >>~/.zshrc
  log -d "Powerlevel10k Installed Successfully!."
  log "${blue}Run \e[0;32mp10k \e[0;31m;configure."
 }

Oh-My-Tmux() {
  local backup=("${HOME}/.tmux" "${HOME}/.tmux.conf.old." "${HOME}/.tmux.conf")
  backup_files "${backup[@]}"

  log "$A ${blue}Installing dependencies Oh-My-Tmux ... "
  bash -c "$(curl -fsSL https://github.com/rlvilla/OhMyTmux/raw/main/ohmytmux.sh)"
  log "$A ${blue}Setting tmux following UMBRELLA instructions ... "
  log -d "Oh-My-Tmux Installed Successfully!."
  }

Vim() {
  local dependencies=("vim-python" "curl" "nodejs")
  local backup=("${HOME}/.vimrc" "${HOME}/.vim")
  local files="${share}/.vimrc"
  check_files "${files[@]}"

  log "$A ${blue}Installing dependencies vim ..."
  install_dependencies "${dependencies[@]}"
  backup_files "${backup[@]}"
  curl -fLo ~/.vim/autoload/plug.vim --create-dirs \https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim 2>&1;

  log "$A ${blue}Setting vim following UMBRELLA instructions ... "
  mv "${share}/.vimrc" ~
  vim +PlugInstall
  vim +PlugUpdate
  log -d "Vim Installed Successfully!."
}

Neovim() {
  local dependencies=("neovim" "nodejs" "python-pynvim" "curl")
  local backup="${HOME}/.config/nvim"
  local files="${share}/init.vim"
  check_files "${files[@]}"

  log "$A ${blue}Installing dependencies Neovim ... "
  install_dependencies "${dependencies[@]}"
  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
  bash "$HOME/.nvm/nvm.sh"
  backup_files "${backup[@]}"
  curl -fLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim 2>&1

  log "$A ${blue}Setting Neovim following UMBRELLA instructions ... "
  mkdir ~/.config/nvim;
  mv "${share}/init.vim" ~/.config/nvim;
  nvim +PlugInstall
  nvim +PlugUpdate
  log -d "Neovim Installed Successfully!."
}

x11_native() {
  local dependencies=('tar' 'x11-repo' 'xfce4' 'xfce4-goodies' 'xfce4-pulseaudio-plugin' 'firefox' 'starship' 'termux-x11-nightly' 'tur-repp' 'virglrenderer-android' 'fastfetch' 'papirus-icon-theme' 'eza' 'bat')
  local files=("${share}/Sweet-Ambar-v40.tar.xz" "${share}/Sweet-Dark-v40.tar.xz" "${share}/candy-icons.tar.xz")

  check_files "${files[@]}"

  log "$A ${blue}Installing dependencies X11_Native ... "
  install_dependencies "${dependencies[@]}"

  log "$A ${blue}Setting desktop x11_native following UMBRELLA instructions ... "
  if [ ! -d ~/.icons ]; then
    mkdir ~/.icons
  fi
  if [ ! -d ~/.themes ]; then
    mkdir ~/.themes
  fi
  mv "${share}/Sweet-Ambar-v40.tar.xz ${HOME}/.themes" && tar -xf "${HOME}/.themes/Sweet-Ambar-v40.tar.xz"
  rm -r ~/.themes/Sweet-Ambar-v40.tar.xz;
  mv "${share}/Sweet-Dark-v40.tar.xz ${HOME}/.themes" && tar -xf "${HOME}/.themes/Sweet-Dark-v40.tar.xz"
  rm -r ~/.themes/Sweet-Dark-v40.tar.xz;
  mv "${share}/candy-icons.tar.xz ${HOME}/.icons" && tar -xf "${HOME}/.icons/candy-icons.tar.xz"
  rm -r ~/.icons/candy-icons.tar.xz
  log -d "Ternux-11 Native Installed Successfully!."
}

x11_distro() {
  local dependencies=("x11-repo" "termux-x11-nightly" "tur-repo" "pulseaudio" "proot-distro" "wget" "git")

  log "$A ${blue}Installing dependencies X11_distro ... "
  install_dependencies "${dependencies[@]}"
  log -d "Ternux-X11 distro Installed Successfully!"
  log "$A ${blue}To install a distribution, Run \e[0;34mproot-disto \e[0;31mlist\e[0;33m, to see the available distributions, choose one and execute the Comammos side:"

  printf "\e[0;34mproot-distro install <alias>\e[0;33m
  pd login debian
  pd login debian
  apt update && apt upgrade -y
  apt install sudo nano adduser xfce4 xfce4-terminal -y
  adduser droidmaster
  Edit this file /etc/sudoers and add following line: droidmaster ALL=(ALL:ALL) ALL
  su - droidmaster\e[0m\n"

}

Distro() {
  local dependencies=("proot-distro" "wget" "git")

  log "$A ${blue}Installing dependencies distro ... "
  install_dependencies "${dependencies[@]}"
  log -d "Distro Installed Successfully"
  log "$A ${blue}To install a distribution, Run \e[0;34mproot-disto \e[0;31mlist\e[0;33m, to see the available distributions, choose one and execute the Comammos side:"

  printf "\e[0;34mproot-distro install <alias>\e[0;33m
  pd login debian
  pd login debian
  apt update && apt upgrade -y
  apt install sudo nano adduser
  Edit this file /etc/sudoers and add following line: droidmaster ALL=(ALL:ALL) ALL
  su - droidmaster\e[0m\n"
}

main() {
  case "$1" in
    -u|UMBRELLA)
      UMBRELLA
      ;;
    -p|Packages)
      install_packages
      ;;
    -z|Oh-my-zsh)
      Oh-My-Zsh
      ;;
    -t|Oh-my-Tmux)
      Oh-My-Tmux
      ;;
    -v|Vim)
      Vim
      ;;
    -n|Neovim)
      Neovim
      ;;
    p10k)
      P10K
      ;;
    Python)
      Python
      ;;
    distro)
      Distro
      ;;
    X11_distro)
      x11_distro
      ;;
    X11_native)
      x11_native
      ;;
    -|--help)
      usage
      ;;
    *)
      error "Invalid option '$1'."
      usage
      exit 1
      ;;
  esac
}

if [ -z "$1" ]; then
  usage
  exit 0
fi

main "$@"

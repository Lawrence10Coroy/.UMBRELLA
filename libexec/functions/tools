#!/usr/bin/env bash

source ${HOME}/.UMBRELLA/UMBRELLA/functions || { echo -en "\033[31mError:\033[33m File 'functions' is required but not exist!.\033[0m\n" ; exit 1; }

usage() { printf "${yellow}USAGE:${green} tools ${yellow}[ -l | -a | -i | -r ]

      OPTIONS:
    ${red}-l${yellow} ┆┄┄┄┄┄┄┆ ${red}--list${yellow}            ┆┅┅┅┅┅┅┆ Show list for banner.
    ${red}-a${yellow} ┆┄┄┄┄┄┄┆ ${red}--about   <tools>${yellow} ┆┅┅┅┅┅┅┆ For informations on tools or frameworks.
    ${red}-i${yellow} ┆┄┄┄┄┄┄┆ ${red}--install <tools>${yellow} ┆┅┅┅┅┅┅┆ Usage for change banner.
    ${red}-r${yellow} ┆┄┄┄┄┄┄┆ ${red}--remove  <tools>${yellow} ┆┅┅┅┅┅┅┆ Show list for banner. ${default}\n\n"; }

list_tools() {
  local list=$(mktemp)
  check_dependencies column
  ls ${UMBRELLA}/Tools > "$list"
  printf "${yellow}჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻\n${underline}To install/uninstall the tools run --> ${green}UMBRELLA ${red}install/remove <tools>${yellow}\n\n"
  column $list
  printf "\n჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻჻\n${default}"
  rm $list
  log_data "List tools."
}

about_tools() {
  local argv="$1"
  local tool_readme="${UMBRELLA}/Tools/.Readme/$argv"
  if [ -z "$argv" ]; then
    echo -e "${red}Error:${yellow} Input an tools!."
    usage
    exit 1
  fi
  check_file "$tool_readme"
  bat --style=plain "$tool_readme"
  log_data "Consultation about the '$argv' tool"
}

install_tool() {
  local argv="$1"
  local tool_path="${UMBRELLA}/Tools/$argv"
  if [ -z "$argv" ]; then
    echo -e "${red}Error:${yellow} Input an tools!."
    usage
    exit 1
  fi
  check_file "$tool_path"
  bash "$tool_path"
  log_data "Installing dependencies to '$argv'"
}

remove_tool() {
  local argv="$1"
  local removing="Removing '$argv'... "
  local done="Done!\nRemoval Complete"
  local already="Package '$argv' is not installed!, so not removed."
  if [ -z "$argv" ]; then
    echo -e "${red}Error:${yellow} Input an tools!."
    usage
    exit 1
  fi
  if ! command -v "$argv" &>/dev/null; then
    echo -en "$already"
    return
  fi
  echo -en "$removing"
  case "$argv" in
    apktool)
      yes|pkg uninstall apktool
      yes|pkg uninstall apksigner
      ;;
    aquatone)
      gem uninstall aquatone
      rm ${bin}/aquatone
      ;;
    arjun)
      python3 -m pip uninstall arjun
      ;;
    beef-xss)
      rm -rf ${opt}/beef
      rm ${bin}/beef-xss
      yes|pkg remove beef
      ;;
    crunch)
      yes|pkg uninstall crunch
      ;;
    cupp)
      rm -rf ${opt}/cupp
      rm ${bin}/cupp
      ;;
    dirb)
      yes|pkg uninstall dirb
      ;;
    ecuador-id)
      rm -rf ${opt}/Ecuador-ID
      rm ${bin}/ecuador-id
      ;;
    email2pn)
      rm -rf ${opt}/email2phonenumber
      rm ${bin}/email2pn
      ;;
    evilurl)
      rm -rf ${opt}/EvilURL
      rm ${bin}/evilurl
      ;;
    exiftools)
      yes|pkg uninstall exiftool
      ;;
    fbuserid)
      rm -rf ${opt}/fbuserid
      rm ${bin}/fbuserid
      ;;
    ghost)
      python3 -m pip uninstall ghost
      ;;
    gobuster)
      yes|pkg remove golang
      rm -r ${opt}/gobuster
      rm ${bin}/gobuster
      ;;
    gophish)
      rm -rf ${opt}/gophish
      rm ${bin}/gophish
      ;;
    h8mail)
      python3 -m pip uninstall h8mail
      ;;
    hash-buster)
      rm -rf ${opt}/Hash-Buster
      rm ${bin}/buster
      ;;
    hash-id)
      rm -rf ${opt}/hash-identifier
      rm ${bin}/hash-id
      ;;
    hashcrypt)
      rm -rf ${opt}/hashcrypt
      rm ${bin}/hashcrypt
      ;;
    holehe)
      python3 -m pip uninstall holehe
      ;;
    hydra)
      rm -rf ${opt}/thc-hydra
      rm ${bin}/hydra
      ;;
    i-Haklab)
      yes|pkg remove i-haklab
      yes|apt autoremove
      ;;
    infoga)
      rm -rf ${opt}/Infoga
      rm ${bin}/infoga
      ;;
    iphunter)
      rm -rf ${opt}/iphunter
      rm ${bin}/iphunter
      ;;
    john)
      rm -rf ${opt}/john
      rm ${PREFIX}/share/john
      rm ${bin}/john
      rm ${bin}/zip2john
      rm ${bin}/rar2john
      rm ${bin}/ssh2john
      ;;
    magmaosint)
      rm -rf ${opt}/MagmaOsint
      rm ${bin}/magmaosint
      ;;
    metagoofil)
      rm -rf ${opt}/metagoofil
      rm ${bin}/metagoofil
      ;;
    metasploit)
      yes|pkg uninstall ruby
      rm -rf ${opt}/metasploit-framework
      rm ${bin}/msfconsole
      rm ${bin}/msfvenom
      ;;
    mosint)
      rm -rf ${opt}/mosint
      rm ${bin}/mosint
      ;;
    ncshare)
      rm -rf ${opt}/ncshare
      rm ${bin}/ncshare
      ;;
    neovim)
      rm -rf ${HOME}/.config/nvim
      npm uninstall neovim
      ;;
    netcat)
      yes|pkg uninstall netcat-openbsd
      ;;
    nexfil)
      rm -rf ${opt}/nexfil
      rm ${bin}/nexfil
      ;;
    nikto)
      rm -rf ${opt}/nikto
      rm ${bin}/nikto
      ;;
    nmap)
      rm -rf ${opt}/nmap-vulners
      rm -rf ${opt}/scipag_vulscan
      yes|pkg uninstall nmap
      ;;
    octosuite)
      python3 -m pip uninstall octosuite
      ;;
    onionsearch)
      python3 -m pip uninstall onionsearch
      ;;
    phone-dox)
      rm -rf ${opt}/Phone-dox
      rm ${bin}/phone-dox
      ;;
    phoneinfoga)
      rm -rf ${opt}/PhoneInfoga
      rm ${bin}/phoneinfoga
      ;;
    phonesploit)
      rm -rf ${opt}/PhoneSploit-Pro
      rm ${bin}/phonesploit
      ;;
    photon)
      rm -rf ${opt}/Photon
      rm ${bin}/photon
      ;;
    protosint)
      rm -rf ${opt}/ProtOSINT
      rm ${bin}/protosint
      ;;
    pwnedornot)
      rm -rf ${opt}/pwnedOrNot
      rm ${bin}/pwnedornot
      ;;
    qrlink)
      rm -rf ${opt}/qrlink
      rm ${bin}/qrlink
      ;;
    recon-ng)
      rm -rf ${opt}/recon-ng
      rm ${bin}/recon-ng
      ;;
    recondog)
      rm -rf ${opt}/ReconDog
      rm ${bin}/recondog
      ;;
    redhawk)
      rm -rf ${opt}/RED_HAWK
      rm ${bin}/redhawk
      ;;
    routersploit)
      rm -rf ${opt}/routersploit
      rm ${bin}/routersploit
      ;;
    saycheese)
      rm -rf ${opt}/saycheese
      rm ${bin}/saycheese
      ;;
    seeker)
      rm -rf ${opt}/seeker
      rm ${bin}/seeker
      ;;
    sherlock)
      rm -rf ${opt}/sherlock
      rm ${bin}/sherlock
      ;;
    shodan)
      python3 -m pip uninstall shodan
      ;;
    sigit)
      rm -rf ${opt}/SIGIT
      rm ${bin}/sigit
      ;;
    slowloris)
      rm -rf ${opt}/slowloris
      rm ${bin}/slowloris
      ;;
    speedtest)
      python3 -m pip uninstall speedtest-cli
      ;;
    sqlmap)
      python3 -m pip uninstall sqlmap
      ;;
    sublist3r)
      rm -rf ${opt}/Sublist3r
      rm ${bin}/sublist3r
      ;;
    tmate)
      yes|pkg uninstall tmate
      ;;
    translate)
      yes|pkg uninstall translate-shell
      ;;
    transwer)
      rm -rf ${opt}/transwer
      rm ${bin}/transwer
      ;;
    vector)
      rm -rf ${opt}/vector
      rm ${bin}/vector
      ;;
    vim)
      rm -rf ${HOME}/.vim ${HOME}/.vimrc
      yes|pkg uninstall vim vim-python
      ;;
    virustotal)
      yes|pkg uninstall virustotal-cli
      ;;
    weeman)
      rm -rf ${opt}/weeman
      rm ${bin}/weeman
      ;;
    whatweb)
      rm -rf ${opt}/WhatWeb
      rm ${bin}/whatweb
      ;;
    wortex)
      rm -rf ${opt}/wortex
      rm ${bin}/wortex
      ;;
    xsstrike)
      rm -rf ${opt}/XSStrike
      rm ${bin}/xsstrike
      ;;
    *)
      echo -e "${red}Error:${yellow} Unknown tools!. Usage${green} tools ${red}-r <tools>${yellow} to uninstall.${default}"
      return
      ;;
  esac
  log "Removing $argv"
  log "${D}$done"
}

if [ -z "$1" ];then
  usage
  exit 1
fi

case $1 in
  -h|-help) usage ;;
  -l|--list) list_tools ;;
  -a|--about) about_tools "$2";;
  -i|--install) install_tool "$2";;
  -r|--remove) remove_tool "$2";;
  *)
    echo -e "${red}Error:${yellow} Option '$1' invalid!."
    usage ; info exit 1
    ;;
esac

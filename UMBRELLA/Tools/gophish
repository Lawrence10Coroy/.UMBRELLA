#!/usr/bin/env bash
#Useful functions for customization of the Umbrella
source "${HOME}/.UMBRELLA/UMBRELLA/functions" || { echo -en "\033[31mError:\033[33m File 'functions' is required but not exist!.\033[0m\n" ; exit 1; }
main() {
  local bin=("git" "golang")

  if [ ! -x $PREFIX/bin/gophish ]; then
    install_dependencies "${bin[@]}"
    log "Installing dependencies for gophish ... "
    update_system

    git clone https://github.com/gophish/gophish $PREFIX/opt/gophish
    rm "$PREFIX/opt/gophish/config.json"
    touch "$PREFIX/opt/gophish/config.json"
    cat <<- Confg > $PREFIX/opt/gophish/config.json
{
  "admin_server": {
    "listen_url": "127.0.0.1:3333",
    "use_tls": true,
    "cert_path": "gophish_admin.crt",
    "key_path": "gophish_admin.key",
    "trusted_origins": []
  },
  "phish_server": {
    "listen_url": "127.0.0.1:8080",
    "use_tls": false,
    "cert_path": "example.crt",
    "key_path": "example.key"
  },
  "db_name": "sqlite3",
  "db_path": "gophish.db",
  "migrations_prefix": "db/db_",
  "contact_address": "",
  "logging": {
    "filename": "",
    "level": ""
  }
}
Confg
    go build
    touch $PREFIX/bin/gophish
    cat <<- confg > $PREFIX/bin/gophish
#!/bin/bash
gophish="/data/data/com.termux/files/usr/opt/gophish"
cd \${gophish}
./gophish "\$@"
confg
    chmod 711 $PREFIX/bin/gophish
    log "$D Done!"
    log "Please Execute:"
    echo
    log "gophish <argv>"
  else
    log "$D Already Installed!"
  fi
}

main
